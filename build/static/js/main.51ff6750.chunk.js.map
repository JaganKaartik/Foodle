{"version":3,"sources":["static/images/home-L.jpg","static/images/home-R.jpg","services/helpers.js","redux/dishes/thunkActions.js","redux/dishes/dishActions.js","redux/dishes/dishActionTypes.js","components/foodtable/DishForm.jsx","components/modals/AddModal.jsx","selectors/index.js","components/foodtable/FilterMenu.jsx","redux/utils/utilActions.js","redux/utils/utilActionTypes.js","components/foodtable/FoodTable.header.jsx","components/modals/OperationsModal.jsx","components/foodtable/Food.jsx","components/foodtable/FoodTable.body.jsx","components/commons/loader.jsx","components/foodtable/FoodTable.jsx","components/Auth.jsx","components/navigation/Home.jsx","components/navigation/Navigation.jsx","components/navigation/PrivateRoute.jsx","components/navigation/AuthHomeRoute.jsx","components/navigation/User.jsx","components/modals/FoodModal.jsx","components/navigation/searchDish.jsx","components/Router.jsx","redux/reducers/fetchDishReducer.js","redux/reducers/deleteDishReducer.js","redux/reducers/addDishReducer.js","redux/reducers/updateDishReducer.js","redux/reducers/fetchOneDishReducer.js","redux/reducers/filterDishReducer.js","redux/reducers/index.js","redux/store.js","App.jsx","index.js"],"names":["module","exports","server_url","process","twitterLogin","window","open","googleLogin","addDish","name","type","price","fetch","method","headers","body","JSON","stringify","mode","credentials","thunkFetchDishes","dispatch","then","resp","json","d","payload","catch","err","thunkFetchOneDish","id","displayDish","thunkDeleteDish","delDish","ok","message","actionCreators","thunkUpdateDishes","updateDish","addDishForm","state","changeHandler","field","e","setState","target","value","dishFormHandler","preventDefault","res","props","onAdd","console","log","className","onSubmit","this","placeholder","onChange","bind","React","Component","AddModal","isOpen","close","actions","text","onClick","Button","ModalTransition","onClose","heading","DishForm","getFilteredDishes","dishes","dishtype","length","result","i","push","dishTypeSelector","createSelector","fetchdish","typesArray","filter","v","self","indexOf","getTypes","FilterMenu","clickHandler","setFilter","map","key","connect","FoodTableHeader","display","OperationsModal","isEditable","handler","edit","datavalue","click","foodid","Food","sendData","temp","saveHandler","editHandler","foodId","FoodTableBody","data","index","FoodleLoader","class","FoodTable","deleteOneDish","displayAllDishes","split","loading","thunkActions","dishid","Authentication","toDashboard","dashHandler","valueHandler","currentTarget","to","style","width","Home","src","homeL","alt","homeR","Navigation","handleLogoutClick","displayNav","authstate","PrivateRoute","component","userInfo","rest","render","AuthHomeRoute","User","authProvider","provider","profileImageUrl","profileBannerUrl","FoodModal","dish","SearchDish","modal","formHandler","modalHandler","required","fetchOne","Routes","isAuthenticated","componentDidMount","success","authHandler","user","prevstate","path","exact","Auth","initialState","error","fetchDishReducer","action","deleteDishReducer","addDishReducer","updateDishReducer","fetched","fetchOneDishReducer","filterDishReducer","rootReducer","combineReducers","deldish","updatedish","adddish","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.51ff6750.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home-L.7954fc3e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home-R.e92fb50a.jpg\";","const server_url = process.env.REACT_APP_SERVER_URL || '';\n\nexport const checkAuth = () => {\n  return fetch(server_url + '/auth/status', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    mode: 'cors',\n    credentials: 'include'\n  });\n};\n\nexport const twitterLogin = () => {\n  window.open(server_url + '/auth/twitter', '_self');\n};\n\nexport const googleLogin = () => {\n  window.open(server_url + '/auth/google', '_self');\n};\n\nexport const displayAllDish = () => {\n  return fetch(server_url + '/api/v1/dish/all', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    mode: 'cors',\n    credentials: 'include'\n  });\n};\n\nexport const displayDish = (id) => {\n  return fetch(server_url + `/api/v1/dish/${id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    mode: 'cors',\n    credentials: 'include'\n  });\n};\n\nexport const addDish = (name, type, price) => {\n  return fetch(server_url + '/api/v1/dish/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      type,\n      price\n    }),\n    mode: 'cors',\n    credentials: 'include'\n  });\n};\n\nexport const delDish = (id) => {\n  return fetch(server_url + `/api/v1/dish/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    mode: 'cors',\n    credentials: 'include'\n  });\n};\n\nexport const updateDish = (name, price) => {\n  return fetch(server_url + `/api/v1/dish/`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      price\n    }),\n    mode: 'cors',\n    credentials: 'include'\n  });\n};\n","import * as actionCreators from './dishActions';\nimport { displayAllDish, displayDish, updateDish, addDish, delDish } from '../../services/helpers';\n\nexport const thunkFetchDishes = () => {\n  return function (dispatch) {\n    dispatch(actionCreators.fetchDishesRequest());\n    return displayAllDish()\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((d) => {\n        dispatch(actionCreators.fetchDishesSuccess(d));\n      })\n      .catch((err) => dispatch(actionCreators.fetchDishesFailure(err)));\n  };\n};\n\nexport const thunkFetchOneDish = (id) => {\n  return function (dispatch) {\n    dispatch(actionCreators.fetchOneDishRequest());\n    return displayDish(id)\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((d) => {\n        dispatch(actionCreators.fetchOneDishSuccess(d));\n      })\n      .catch((err) => dispatch(actionCreators.fetchOneDishFailure(err)));\n  };\n};\n\nexport const thunkDeleteDish = (id) => {\n  return function (dispatch) {\n    delDish(id)\n      .then((resp) => {\n        if (resp.ok) {\n          const message = 'Successfully Deleted!';\n          dispatch(actionCreators.deleteDishSuccess(message));\n        }\n      })\n      .catch((err) => dispatch(actionCreators.deleteDishFailure(err)));\n  };\n};\n\nexport const thunkUpdateDishes = (name, price) => {\n  return function (dispatch) {\n    updateDish(name, price)\n      .then((resp) => {\n        if (resp.ok) {\n          const message = 'Successfully Updated!';\n          dispatch(actionCreators.updateDishSuccess(message));\n        }\n      })\n      .catch((err) => dispatch(actionCreators.updateDishFailure(err)));\n  };\n};\n\nexport const thunkAddDishes = () => {\n  return function (dispatch) {\n    addDish()\n      .then((resp) => {\n        if (resp.ok) {\n          const message = 'Successfully Added Dish!';\n          dispatch(actionCreators.addDishSuccess(message));\n        }\n      })\n      .catch((err) => dispatch(actionCreators.addDishFailure(err)));\n  };\n};\n","import * as actionTypes from './dishActionTypes';\n\nexport const fetchDishesRequest = () => {\n  return {\n    type: actionTypes.FETCH_DISH_REQUEST\n  };\n};\n\nexport const fetchDishesSuccess = (dishes) => {\n  return {\n    type: actionTypes.FETCH_DISH_SUCCESS,\n    payload: dishes\n  };\n};\n\nexport const fetchDishesFailure = (error) => {\n  return {\n    type: actionTypes.FETCH_DISH_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchOneDishRequest = () => {\n  return {\n    type: actionTypes.FETCH_ONE_DISH_REQUEST\n  };\n};\n\nexport const fetchOneDishSuccess = (dish) => {\n  return {\n    type: actionTypes.FETCH_ONE_DISH_SUCCESS,\n    payload: dish\n  };\n};\n\nexport const fetchOneDishFailure = (error) => {\n  return {\n    type: actionTypes.FETCH_ONE_DISH_FAILURE,\n    payload: error\n  };\n};\n\nexport const addDishSuccess = (message) => {\n  return {\n    type: actionTypes.ADD_DISH_SUCCESS,\n    payload: message\n  };\n};\n\nexport const addDishFailure = (message) => {\n  return {\n    type: actionTypes.ADD_DISH_FAILURE,\n    payload: message\n  };\n};\n\nexport const updateDishSuccess = (message) => {\n  return {\n    type: actionTypes.UPDATE_DISH_SUCCESS,\n    payload: message\n  };\n};\n\nexport const updateDishFailure = (message) => {\n  return {\n    type: actionTypes.UPDATE_DISH_FAILURE,\n    payload: message\n  };\n};\n\nexport const deleteDishSuccess = (message) => {\n  return {\n    type: actionTypes.DELETE_DISH_SUCCESS,\n    payload: message\n  };\n};\n\nexport const deleteDishFailure = (message) => {\n  return {\n    type: actionTypes.DELETE_DISH_FAILURE,\n    payload: message\n  };\n};\n","export const FETCH_DISH_REQUEST = 'FETCH_DISH_REQUEST';\nexport const FETCH_DISH_SUCCESS = 'FETCH_DISH_SUCCESS';\nexport const FETCH_DISH_FAILURE = 'FETCH_DISH_FAILURE';\nexport const FETCH_ONE_DISH_REQUEST = 'FETCH_ONE_DISH_REQUEST';\nexport const FETCH_ONE_DISH_SUCCESS = 'FETCH_ONE_DISH_SUCCESS';\nexport const FETCH_ONE_DISH_FAILURE = 'FETCH_ONE_DISH_FAILURE';\nexport const UPDATE_DISH_SUCCESS = 'UPDATE_DISH_SUCCESS';\nexport const UPDATE_DISH_FAILURE = 'UPDATE_DISH_FAILURE';\nexport const ADD_DISH_SUCCESS = 'ADD_DISH_SUCCESS';\nexport const ADD_DISH_FAILURE = 'ADD_DISH_FAILURE';\nexport const DELETE_DISH_SUCCESS = 'DELETE_DISH_SUCCESS';\nexport const DELETE_DISH_FAILURE = 'DELETE_DISH_FAILURE';\n","import React from 'react';\nimport { addDish } from '../../services/helpers';\n\nclass addDishForm extends React.Component {\n  state = {\n    name: '',\n    type: '',\n    price: ''\n  };\n\n  changeHandler = (field, e) => {\n    this.setState({\n      [field]: e.target.value\n    });\n  };\n\n  dishFormHandler = (e) => {\n    e.preventDefault();\n    addDish(this.state.name, this.state.type, this.state.price).then((res) => {\n      if (res.ok) {\n        this.props.onAdd();\n        console.log('Successfully added dish');\n      } else {\n        console.log('Unable to add dish');\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"ui form\" onSubmit={this.dishFormHandler}>\n          <div className=\"field\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              name=\"dish-name\"\n              placeholder=\"Dish Name\"\n              onChange={this.changeHandler.bind(this, 'name')}\n              value={this.state.name}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Type</label>\n            <input\n              type=\"text\"\n              name=\"dish-type\"\n              placeholder=\"Dish Type\"\n              onChange={this.changeHandler.bind(this, 'type')}\n              value={this.state.type}\n            />\n          </div>\n          <div className=\"field\">\n            <label>Price</label>\n            <input\n              type=\"text\"\n              name=\"dish-price\"\n              placeholder=\"Dish Price\"\n              onChange={this.changeHandler.bind(this, 'price')}\n              value={this.state.price}\n            />\n          </div>\n          <button className=\"ui button\" type=\"submit\">\n            Add Dish\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default addDishForm;\n","import React, { Component } from 'react';\nimport Button from '@atlaskit/button';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\nimport DishForm from '../foodtable/DishForm';\n\nclass AddModal extends Component {\n  state = {\n    isOpen: false\n  };\n\n  open = () => this.setState({ isOpen: true });\n  close = () => this.setState({ isOpen: false });\n\n  render() {\n    const { isOpen } = this.state;\n    const actions = [{ text: 'Close', onClick: this.close }];\n    return (\n      <div>\n        <Button onClick={this.open}>Add Dish</Button>\n\n        <ModalTransition>\n          {isOpen && (\n            <Modal actions={actions} onClose={this.close} heading=\"Add Dish!\">\n              <DishForm onAdd={this.props.onAdd} />\n            </Modal>\n          )}\n        </ModalTransition>\n      </div>\n    );\n  }\n}\n\nexport default AddModal;\n","import { createSelector } from 'reselect';\n\nexport const getTypes = (dishes) => {\n  console.log('gettypes');\n  let typesArray = [];\n  let length = dishes.length;\n  for (let i = 0; i < length; ++i) {\n    typesArray.push(dishes[i].type);\n  }\n  let x = typesArray.filter((v, i, self) => self.indexOf(v) === i);\n  return x;\n};\n\nexport const getFilteredDishes = (dishes, dishtype) => {\n  let length = dishes.length;\n  let result = [];\n  for (let i = 0; i < length; ++i) {\n    if (dishes[i].type === dishtype || dishtype === null) {\n      result.push(dishes[i]);\n    }\n  }\n  return result;\n};\n\nconst data = (state) => {\n  return state.fetchdish.dishes;\n};\n\nexport const dishTypeSelector = createSelector(data, (dishes) => getTypes(dishes));\n","import React, { Component } from 'react';\nimport Button from '@atlaskit/button';\nimport { connect } from 'react-redux';\nimport { dishTypeSelector } from '../../selectors/index';\nimport { setFilter } from '../../redux/utils/utilActions';\n\nclass FilterMenu extends Component {\n  state = {};\n\n  clickHandler = (type) => {\n    this.props.setFilter(type);\n  };\n\n  render() {\n    return (\n      <div className=\"ui compact menu\">\n        <div className=\"ui simple dropdown item\">\n          <Button>Items Type</Button>\n          <div className=\"menu\">\n            <div className=\"item\" onClick={this.clickHandler.bind(this, null)}>\n              All\n            </div>\n            {console.log('Reselect Value: ' + this.props.type)}\n            {this.props.type.map((type) => {\n              return (\n                <div\n                  key={type}\n                  onClick={this.clickHandler.bind(this, type)}\n                  className=\"item\"\n                  value={type}\n                >\n                  {type}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    type: dishTypeSelector(state)\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setFilter: (dishtype) => {\n      dispatch(setFilter(dishtype));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterMenu);\n","import * as actionTypes from './utilActionTypes';\n\nexport const setFilter = (payload) => {\n  return {\n    type: actionTypes.FILTERED_DISH,\n    payload\n  };\n};\n","export const FILTERED_DISH = 'FILTERED_DISH';\n","import React, { Component } from 'react';\nimport AddModal from '../modals/AddModal';\nimport FilterMenu from './FilterMenu';\n\nclass FoodTableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Item Name</th>\n          <th>\n            {' '}\n            <FilterMenu />{' '}\n          </th>\n          <th>Item Price</th>\n          <th>\n            {' '}\n            <AddModal onAdd={this.props.display} />{' '}\n          </th>\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default FoodTableHeader;\n","import React, { Component } from 'react';\nimport Button from '@atlaskit/button';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\n\nclass OperationsModal extends Component {\n  state = {\n    isOpen: false\n  };\n\n  open = () => this.setState({ isOpen: true });\n  close = () => this.setState({ isOpen: false });\n\n  render() {\n    const { isOpen } = this.state;\n    const actions = [{ text: 'Close', onClick: this.close }];\n    return (\n      <div>\n        <Button onClick={this.open}>Operations</Button>\n\n        <ModalTransition>\n          {isOpen && (\n            <Modal actions={actions} onClose={this.close} heading=\"Dish Operations!\">\n              <div className=\"item\">\n                {this.props.isEditable ? (\n                  <button\n                    type=\"button\"\n                    className=\"ui green basic button\"\n                    onClick={this.props.handler}\n                  >\n                    <i className=\"save icon\" />\n                    Save\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    className=\"ui olive basic button\"\n                    onClick={this.props.handler}\n                  >\n                    <i className=\"edit icon\" />\n                    Edit\n                  </button>\n                )}\n              </div>\n\n              {this.props.isEditable ? (\n                <input\n                  type=\"text\"\n                  placeholder=\"price to update\"\n                  name=\"price\"\n                  onChange={this.props.edit.bind(this)}\n                  value={this.props.datavalue}\n                />\n              ) : (\n                <br />\n              )}\n\n              <div className=\"item\">\n                <button\n                  type=\"button\"\n                  className=\"ui orange basic button\"\n                  onClick={this.props.click.bind(this, this.props.foodid, 'delete')}\n                >\n                  <i className=\"ban icon\" />\n                  Delete\n                </button>\n              </div>\n            </Modal>\n          )}\n        </ModalTransition>\n      </div>\n    );\n  }\n}\n\nexport default OperationsModal;\n","import React, { Component } from 'react';\nimport Operations from '../modals/OperationsModal';\nclass Food extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditable: false,\n      temp: props.price\n    };\n  }\n\n  sendData = () => {\n    return this.props.click.bind(this, this.props.name + this.state.temp, 'edit');\n  };\n\n  saveHandler = (e) => {\n    e.preventDefault();\n    if (this.state.isEditable) {\n      this.setState(() => {\n        return { isEditable: false };\n      });\n      console.log('From Food : ' + this.props.name);\n      console.log('From Temp : ' + this.state.temp);\n      this.props.click(this.props.name + this.state.temp, 'edit', e);\n    } else {\n      this.setState(() => {\n        return { isEditable: true };\n      });\n    }\n  };\n\n  editHandler = (e) => {\n    this.setState({ temp: e.target.value });\n    console.log(e.target.value);\n  };\n\n  render() {\n    return (\n      <tr>\n        <td>{this.props.foodId}</td>\n        <td>{this.props.name}</td>\n        <td>{this.props.type}</td>\n        <td>{this.props.price}</td>\n        <td>\n          <Operations\n            isEditable={this.state.isEditable}\n            handler={this.saveHandler}\n            edit={this.editHandler}\n            datavalue={this.state.temp}\n            click={this.props.click}\n            foodid={this.props.id}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default Food;\n","import React, { Component } from 'react';\nimport Food from './Food';\nimport { getFilteredDishes } from '../../selectors/index';\nimport { connect } from 'react-redux';\nclass FoodTableBody extends Component {\n  render() {\n    return (\n      <tbody>\n        {this.props.data.map((value, index) => {\n          return <Food key={index} {...value} foodId={index + 1} click={this.props.click} />;\n        })}\n      </tbody>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: getFilteredDishes(state.fetchdish.dishes, state.filter)\n  };\n};\n\nexport default connect(mapStateToProps)(FoodTableBody);\n","import React, { Component } from 'react';\n\nexport default class FoodleLoader extends Component {\n  render() {\n    return (\n      <div>\n        <div class=\"progress\">\n          <div class=\"indeterminate\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as thunkActions from '../../redux';\nimport FoodTableHeader from './FoodTable.header';\nimport FoodTableBody from './FoodTable.body';\nimport FoodleLoader from '../commons/loader';\n\nclass FoodTable extends Component {\n  componentDidMount() {\n    this.props.displayAllDishes();\n  }\n\n  clickHandler = (field, type, e) => {\n    e.preventDefault();\n    if (type === 'delete') {\n      this.props.deleteOneDish(field);\n      this.props.displayAllDishes();\n    } else {\n      const name = field.split('$')[0];\n      const price = '$' + field.split('$')[1];\n      this.props.updateDish(name, price);\n      this.props.displayAllDishes();\n    }\n  };\n\n  render() {\n    if (this.props.data.loading) return <FoodleLoader />;\n    return (\n      <div>\n        <table className=\"highlight\">\n          <FoodTableHeader display={this.props.displayAllDishes} />\n          <FoodTableBody data={this.props.data.dishes} click={this.clickHandler} />\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.fetchdish\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    displayAllDishes: () => {\n      dispatch(thunkActions.thunkFetchDishes());\n    },\n    updateDish: (name, price) => {\n      dispatch(thunkActions.thunkUpdateDishes(name, price));\n    },\n    deleteOneDish: (dishid) => {\n      dispatch(thunkActions.thunkDeleteDish(dishid));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodTable);\n","import React, { Component } from 'react';\nimport { twitterLogin, googleLogin } from '../services/helpers';\nimport { Redirect } from 'react-router-dom';\nimport '../static/css/home.css';\nclass Authentication extends Component {\n  state = {\n    toDashboard: false\n  };\n\n  changeHandler = (field, e) => {\n    this.setState({\n      [field]: e.target.value\n    });\n  };\n\n  dashHandler = () => {\n    this.setState({\n      toDashboard: true\n    });\n  };\n\n  valueHandler = (e) => {\n    e.preventDefault();\n    if (e.currentTarget.value === 'twitter') {\n      twitterLogin();\n    } else if (e.currentTarget.value === 'google') {\n      googleLogin();\n    }\n  };\n\n  render() {\n    if (this.state.toDashboard) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"container-login\">\n        {/* <div className=\"wrap-login\"> */}\n        <form className=\"login-form\">\n          <span className=\"login-form-title\">Connect to your Foodle Account.</span>\n          <br />\n          <button\n            value=\"google\"\n            className=\"fluid huge ui youtube button\"\n            onClick={this.valueHandler}\n          >\n            <i className=\"google icon\" /> Login with Google\n          </button>\n          <span style={{ display: 'inline-block', width: 100 }}></span>\n          <button\n            value=\"twitter\"\n            className=\"fluid huge ui twitter button\"\n            onClick={this.valueHandler}\n          >\n            <i className=\"twitter icon\" /> Login with Twitter\n          </button>\n        </form>\n        {/* </div> */}\n      </div>\n    );\n  }\n}\n\nexport default Authentication;\n","import React, { Component } from 'react';\nimport homeL from '../../static/images/home-L.jpg';\nimport homeR from '../../static/images/home-R.jpg';\nimport '../../static/css/home.css';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home-div\">\n        <img className=\"sideA fadeA\" src={homeL} alt=\"cant load img\"></img>\n        <img className=\"sideB fadeB inner-image\" src={homeR} alt=\"cant load img\"></img>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nclass Navigation extends Component {\n  handleLogoutClick = () => {\n    window.open(process.env.REACT_APP_SERVER_URL + '/auth/logout', '_self');\n  };\n\n  render() {\n    return (\n      <nav className=\"all\">\n        <div className=\"nav-wrapper\">\n          <span className=\"brand-logo center foodle\">\n            <NavLink to=\"/\">Foodle</NavLink>\n          </span>\n          {this.displayNav()}\n        </div>\n      </nav>\n    );\n  }\n  displayNav() {\n    if (this.props.authstate === true) {\n      return (\n        <div>\n          <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\n            <li>\n              <NavLink to=\"/dashboard\">Dashboard</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/profile\">Profile</NavLink>\n            </li>\n          </ul>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li>\n              <NavLink to=\"/search\">Search</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/\">\n                <button className=\"tiny ui inverted button\" onClick={this.handleLogoutClick}>\n                  Logout\n                </button>\n                <i className=\"sign-out alternate icon\"></i>\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li>\n              <NavLink to=\"/login\">Login</NavLink>\n            </li>\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ authstate, component: Component, userInfo, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      authstate === true ? <Component userInfo={userInfo} {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst AuthHomeRoute = ({ authstate, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      authstate === true ? <Redirect to=\"/dashboard\" /> : <Component {...props} />\n    }\n  />\n);\n\nexport default AuthHomeRoute;\n","import React, { Component } from 'react';\nimport '../../static/css/home.css';\nexport default class User extends Component {\n  render() {\n    const authProvider = this.props.userInfo.provider;\n    return (\n      <div>\n        <div className=\"container-login\">\n          <div className=\"wrap-login\">\n            {authProvider === 'twitter' ? (\n              <div>\n                <img\n                  src={this.props.userInfo.profileImageUrl}\n                  alt=\"no-img\"\n                  class=\"inner-image-profile\"\n                />\n                <img src={this.props.userInfo.profileBannerUrl} alt=\"no-img\" />\n                <br />\n                <span style={{ display: 'inline-block', width: 100 }}></span>\n                <span class=\"twitter-profile\">{this.props.userInfo.name}</span>\n              </div>\n            ) : (\n              <div>\n                <img src={this.props.userInfo.profileImageUrl} alt=\"no-img\" />\n                <span class=\"twitter-profile\">{this.props.userInfo.name}</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog';\n\nclass FoodModal extends Component {\n  close = () => this.props.onClose();\n\n  render() {\n    const actions = [{ text: 'Close', onClick: this.close }];\n\n    return (\n      <div>\n        <ModalTransition>\n          {\n            <Modal actions={actions} onClose={this.close} heading=\"Search Info\">\n              <table>\n                <thead>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Price</th>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{this.props.dish.name}</td>\n                    <td>{this.props.dish.type}</td>\n                    <td>{this.props.dish.price}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </Modal>\n          }\n        </ModalTransition>\n      </div>\n    );\n  }\n}\n\nexport default FoodModal;\n","import React, { Component } from 'react';\nimport '../../static/css/index.css';\nimport * as thunkActions from '../../redux';\nimport { connect } from 'react-redux';\nimport FoodModal from '../modals/FoodModal';\n\nclass SearchDish extends Component {\n  state = {\n    id: '',\n    modal: false\n  };\n\n  changeHandler = (e) => {\n    e.preventDefault();\n    this.setState({\n      id: e.target.value\n    });\n  };\n\n  formHandler = (e) => {\n    e.preventDefault();\n    this.props.fetchdish(this.state.id);\n    console.log('Control : ' + this.props.data);\n    console.log(this.props.data);\n    this.modalHandler();\n  };\n\n  modalHandler = () => {\n    this.state.modal ? this.setState({ modal: false }) : this.setState({ modal: true });\n  };\n\n  render() {\n    return (\n      <div>\n        <nav>\n          <div className=\"nav-wrapper\">\n            <form className=\"ui form\" onSubmit={this.formHandler}>\n              <input\n                name=\"dish-id\"\n                placeholder=\"Dish ID\"\n                onChange={this.changeHandler.bind(this)}\n                type=\"text\"\n                required\n                value={this.state.value}\n              />\n              <button className=\"ui button\" type=\"submit\">\n                Search\n              </button>\n            </form>\n          </div>\n          <div className=\"container\">\n            {this.state.modal && (\n              <FoodModal dish={this.props.data.dish} onClose={this.modalHandler} />\n            )}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.fetchOne\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchdish: (dishid) => {\n      dispatch(thunkActions.thunkFetchOneDish(dishid)).catch((err) => {\n        this.setState({\n          modal: false\n        });\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDish);\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport FoodTable from './foodtable/FoodTable';\nimport Auth from './Auth';\nimport { Home, Navigation, PrivateRoute, AuthHomeRoute, User, SearchDish } from './navigation';\nimport { checkAuth } from '../services/helpers';\n\nclass Routes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authHandler = this.authHandler.bind(this);\n  }\n\n  state = {\n    isAuthenticated: false,\n    userInfo: {}\n  };\n\n  authHandler() {\n    this.setState((prevstate) => ({\n      isAuthenticated: !prevstate.isAuthenticated\n    }));\n    console.log('Authenticated : ' + this.state.isAuthenticated);\n  }\n\n  componentDidMount = () => {\n    console.log('Mounted After BACKEND REDIRECT');\n    checkAuth()\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((resp) => {\n        if (resp.success === true) {\n          console.log('Successful Authentication @ Router');\n          this.authHandler();\n          this.setState({ userInfo: resp.user });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <Router>\n        <Navigation authHandler={this.authHandler} authstate={this.state.isAuthenticated} />\n\n        <Switch>\n          <AuthHomeRoute authstate={this.state.isAuthenticated} path=\"/\" exact component={Home} />\n\n          <Route path=\"/login\" exact>\n            <Auth authHandler={this.authHandler} />\n          </Route>\n\n          <PrivateRoute\n            authstate={this.state.isAuthenticated}\n            path=\"/dashboard\"\n            exact\n            component={FoodTable}\n          />\n\n          <PrivateRoute\n            authstate={this.state.isAuthenticated}\n            path=\"/search\"\n            exact\n            component={SearchDish}\n          />\n\n          <PrivateRoute\n            authstate={this.state.isAuthenticated}\n            path=\"/profile\"\n            exact\n            component={User}\n            userInfo={this.state.userInfo}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Routes;\n","import * as actionTypes from '../dishes/dishActionTypes';\n\nconst initialState = {\n  loading: false,\n  dishes: [],\n  error: ''\n};\n\nconst fetchDishReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_DISH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        dishes: action.payload\n      };\n    case actionTypes.FETCH_DISH_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        dishes: [],\n        error: action.payload\n      };\n    case actionTypes.FETCH_DISH_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default fetchDishReducer;\n","import * as actionTypes from '../dishes/dishActionTypes';\n\nconst initialState = {\n  message: '',\n  error: ''\n};\n\nconst deleteDishReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.DELETE_DISH_SUCCESS:\n      return {\n        ...state,\n        message: action.payload\n      };\n    case actionTypes.DELETE_DISH_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default deleteDishReducer;\n","import * as actionTypes from '../dishes/dishActionTypes';\n\nconst initialState = {\n  message: '',\n  error: ''\n};\n\nconst addDishReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_DISH_SUCCESS:\n      return {\n        ...state,\n        message: action.payload\n      };\n    case actionTypes.ADD_DISH_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default addDishReducer;\n","import * as actionTypes from '../dishes/dishActionTypes';\n\nconst initialState = {\n  message: '',\n  error: ''\n};\n\nconst updateDishReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.UPDATE_DISH_SUCCESS:\n      return {\n        ...state,\n        message: action.payload\n      };\n    case actionTypes.UPDATE_DISH_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default updateDishReducer;\n","import * as actionTypes from '../dishes/dishActionTypes';\n\nconst initialState = {\n  loading: false,\n  dish: [],\n  error: '',\n  fetched: false\n};\n\nconst fetchOneDishReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ONE_DISH_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case actionTypes.FETCH_ONE_DISH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        fetched: true,\n        dish: action.payload\n      };\n    case actionTypes.FETCH_ONE_DISH_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default fetchOneDishReducer;\n","import * as actionTypes from '../utils/utilActionTypes';\n\nconst initialState = null;\n\nconst filterDishReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FILTERED_DISH:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default filterDishReducer;\n","import { combineReducers } from 'redux';\nimport fetchDishReducer from './fetchDishReducer';\nimport deleteDishReducer from './deleteDishReducer';\nimport addDishReducer from './addDishReducer';\nimport updateDishReducer from './updateDishReducer';\nimport fetchOneDishReducer from './fetchOneDishReducer';\nimport filterDishReducer from './filterDishReducer';\n\nconst rootReducer = combineReducers({\n  fetchdish: fetchDishReducer,\n  fetchOne: fetchOneDishReducer,\n  deldish: deleteDishReducer,\n  updatedish: updateDishReducer,\n  adddish: addDishReducer,\n  filter: filterDishReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React, { Component } from 'react';\nimport Routes from './components/Router';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"homeContainer hoverable\">\n          <Routes />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}